import java.math.BigDecimal;
import java.math.RoundingMode;
import java.util.ArrayList;
import java.util.Collections;

public class Student {

	private String name;
	private ArrayList<Integer> marks = new ArrayList<Integer>();

	public Student(String name, int... marks) {
		this.name = name;

		for (int mark : marks) {
			this.marks.add(mark);
		}
	}

	public int getNumberOfMarks() {
		// TODO Auto-generated method stub
		return marks.size();
	}

	public int getMaxMark() {
//		int max = Integer.MIN_VALUE;
//		for (int mark : marks) {
//			if (mark > max) {
//				max = mark;
//			}
//
//		}
		return Collections.max(marks);
	}

	public int getMinMark() {
//		int min = Integer.MAX_VALUE;
//		for (int mark : marks) {
//			if (mark < min) {
//				min = mark;
//			}
//
//		}
		return Collections.min(marks);
	}

	public int getTotalSumOfMarks() {
		int sum = 0;
		for (int mark : marks) {
			sum = sum + mark;

		}
		return sum;

	}

	public BigDecimal getAverageMark() {

		int sum = getTotalSumOfMarks();
		int number = getNumberOfMarks();

		return new BigDecimal(sum).divide(new BigDecimal(number), 3, RoundingMode.UP);
	}

	@Override
	public String toString() {
		return name + marks;

	}

	public void addNewMark(int index) {
		marks.add(index);

	}

}
